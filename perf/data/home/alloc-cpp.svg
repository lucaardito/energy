<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="146" onload="init(evt)" viewBox="0 0 1200 146" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, svg;
	function init(evt) { 
		details = document.getElementById("details").firstChild; 
		svg = document.getElementsByTagName("svg")[0];
	}
	function s(info) { details.nodeValue = "Function: " + info; }
	function c() { details.nodeValue = ' '; }
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
		
		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}
		
		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;
		
		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) { 
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}
		
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) { 
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;
		
		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;
		
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";
		
		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";
		
		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}	
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="146.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="129" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<g class="func_g" onmouseover="s('malloc (206 samples, 10.00%)')" onmouseout="c()" onclick="zoom(this)">
<title>malloc (206 samples, 10.00%)</title><rect x="1044.4" y="65" width="118.1" height="15.0" fill="rgb(242,55,44)" rx="2" ry="2" />
<text text-anchor="" x="1047.43" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s('__libc_start_main (505 samples, 24.53%)')" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (505 samples, 24.53%)</title><rect x="251.8" y="65" width="289.5" height="15.0" fill="rgb(208,110,39)" rx="2" ry="2" />
<text text-anchor="" x="254.85" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s('_int_free (42 samples, 2.04%)')" onmouseout="c()" onclick="zoom(this)">
<title>_int_free (42 samples, 2.04%)</title><rect x="271.9" y="49" width="24.1" height="15.0" fill="rgb(229,37,22)" rx="2" ry="2" />
<text text-anchor="" x="274.90" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s('operator delete (16 samples, 0.78%)')" onmouseout="c()" onclick="zoom(this)">
<title>operator delete (16 samples, 0.78%)</title><rect x="481.1" y="49" width="9.2" height="15.0" fill="rgb(214,49,19)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('systrim.isra.1 (234 samples, 11.36%)')" onmouseout="c()" onclick="zoom(this)">
<title>systrim.isra.1 (234 samples, 11.36%)</title><rect x="117.7" y="33" width="134.1" height="15.0" fill="rgb(233,22,26)" rx="2" ry="2" />
<text text-anchor="" x="120.74" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >systrim.isra.1</text>
</g>
<g class="func_g" onmouseover="s('operator delete[] (22 samples, 1.07%)')" onmouseout="c()" onclick="zoom(this)">
<title>operator delete[] (22 samples, 1.07%)</title><rect x="490.3" y="49" width="12.6" height="15.0" fill="rgb(234,4,12)" rx="2" ry="2" />
<text text-anchor="" x="493.25" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('all (2,059 samples, 100%)')" onmouseout="c()" onclick="zoom(this)">
<title>all (2,059 samples, 100%)</title><rect x="10.0" y="97" width="1180.0" height="15.0" fill="rgb(224,154,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('__sbrk (98 samples, 4.76%)')" onmouseout="c()" onclick="zoom(this)">
<title>__sbrk (98 samples, 4.76%)</title><rect x="61.6" y="33" width="56.1" height="15.0" fill="rgb(213,180,38)" rx="2" ry="2" />
<text text-anchor="" x="64.58" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__sbrk</text>
</g>
<g class="func_g" onmouseover="s('_int_malloc (432 samples, 20.98%)')" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (432 samples, 20.98%)</title><rect x="796.9" y="65" width="247.5" height="15.0" fill="rgb(216,25,33)" rx="2" ry="2" />
<text text-anchor="" x="799.86" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_int_malloc</text>
</g>
<g class="func_g" onmouseover="s('_Znam@plt (12 samples, 0.58%)')" onmouseout="c()" onclick="zoom(this)">
<title>_Znam@plt (12 samples, 0.58%)</title><rect x="257.0" y="49" width="6.9" height="15.0" fill="rgb(209,184,31)" rx="2" ry="2" />
<text text-anchor="" x="260.00" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('main (252 samples, 12.24%)')" onmouseout="c()" onclick="zoom(this)">
<title>main (252 samples, 12.24%)</title><rect x="322.9" y="49" width="144.4" height="15.0" fill="rgb(207,43,25)" rx="2" ry="2" />
<text text-anchor="" x="325.91" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s('[unknown] (422 samples, 20.50%)')" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (422 samples, 20.50%)</title><rect x="10.0" y="65" width="241.8" height="15.0" fill="rgb(209,135,18)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s('operator new[] (8 samples, 0.39%)')" onmouseout="c()" onclick="zoom(this)">
<title>operator new[] (8 samples, 0.39%)</title><rect x="536.7" y="49" width="4.6" height="15.0" fill="rgb(228,85,50)" rx="2" ry="2" />
<text text-anchor="" x="539.67" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('__sbrk (79 samples, 3.84%)')" onmouseout="c()" onclick="zoom(this)">
<title>__sbrk (79 samples, 3.84%)</title><rect x="541.3" y="65" width="45.2" height="15.0" fill="rgb(243,1,10)" rx="2" ry="2" />
<text text-anchor="" x="544.26" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__sbrk</text>
</g>
<g class="func_g" onmouseover="s('cpp-alloc (2,059 samples, 100.00%)')" onmouseout="c()" onclick="zoom(this)">
<title>cpp-alloc (2,059 samples, 100.00%)</title><rect x="10.0" y="81" width="1180.0" height="15.0" fill="rgb(246,79,30)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cpp-alloc</text>
</g>
<g class="func_g" onmouseover="s('_ZdlPv@plt (9 samples, 0.44%)')" onmouseout="c()" onclick="zoom(this)">
<title>_ZdlPv@plt (9 samples, 0.44%)</title><rect x="251.8" y="49" width="5.2" height="15.0" fill="rgb(249,151,48)" rx="2" ry="2" />
<text text-anchor="" x="254.85" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('_Znwm@plt (14 samples, 0.68%)')" onmouseout="c()" onclick="zoom(this)">
<title>_Znwm@plt (14 samples, 0.68%)</title><rect x="263.9" y="49" width="8.0" height="15.0" fill="rgb(227,197,24)" rx="2" ry="2" />
<text text-anchor="" x="266.88" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('[unknown] (422 samples, 20.50%)')" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (422 samples, 20.50%)</title><rect x="10.0" y="49" width="241.8" height="15.0" fill="rgb(233,40,3)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s('operator new (59 samples, 2.87%)')" onmouseout="c()" onclick="zoom(this)">
<title>operator new (59 samples, 2.87%)</title><rect x="502.9" y="49" width="33.8" height="15.0" fill="rgb(245,183,17)" rx="2" ry="2" />
<text text-anchor="" x="505.86" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >op..</text>
</g>
<g class="func_g" onmouseover="s('malloc@plt (11 samples, 0.53%)')" onmouseout="c()" onclick="zoom(this)">
<title>malloc@plt (11 samples, 0.53%)</title><rect x="474.8" y="49" width="6.3" height="15.0" fill="rgb(216,68,7)" rx="2" ry="2" />
<text text-anchor="" x="477.78" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('systrim.isra.1 (48 samples, 2.33%)')" onmouseout="c()" onclick="zoom(this)">
<title>systrim.isra.1 (48 samples, 2.33%)</title><rect x="1162.5" y="65" width="27.5" height="15.0" fill="rgb(220,118,29)" rx="2" ry="2" />
<text text-anchor="" x="1165.49" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s('free@plt (7 samples, 0.34%)')" onmouseout="c()" onclick="zoom(this)">
<title>free@plt (7 samples, 0.34%)</title><rect x="318.9" y="49" width="4.0" height="15.0" fill="rgb(228,128,37)" rx="2" ry="2" />
<text text-anchor="" x="321.90" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('__default_morecore (90 samples, 4.37%)')" onmouseout="c()" onclick="zoom(this)">
<title>__default_morecore (90 samples, 4.37%)</title><rect x="10.0" y="33" width="51.6" height="15.0" fill="rgb(239,113,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__def..</text>
</g>
<g class="func_g" onmouseover="s('_int_free (367 samples, 17.82%)')" onmouseout="c()" onclick="zoom(this)">
<title>_int_free (367 samples, 17.82%)</title><rect x="586.5" y="65" width="210.4" height="15.0" fill="rgb(230,51,46)" rx="2" ry="2" />
<text text-anchor="" x="589.53" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_int_free</text>
</g>
<g class="func_g" onmouseover="s('malloc (13 samples, 0.63%)')" onmouseout="c()" onclick="zoom(this)">
<title>malloc (13 samples, 0.63%)</title><rect x="467.3" y="49" width="7.5" height="15.0" fill="rgb(214,74,7)" rx="2" ry="2" />
<text text-anchor="" x="470.33" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s('free (40 samples, 1.94%)')" onmouseout="c()" onclick="zoom(this)">
<title>free (40 samples, 1.94%)</title><rect x="296.0" y="49" width="22.9" height="15.0" fill="rgb(242,34,13)" rx="2" ry="2" />
<text text-anchor="" x="298.97" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >f..</text>
</g>
</svg>
